load (url("http://www.census.gov/retail/#arts"))
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
add2 <- function (x, y){}
add2 <- function (x, y){x+y}
add2(3, 5)
above10 <- function (x){
use <- x>10
x[use]
}
above <- function (x, n) {
use <- x >n
x[use]
}
x <- 1:20
above(x, 12)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,1])
}
means
}
columnmean(airquality)
install.packages("RMySQL")
library("RMySQL")
acs <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
head(v1)
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat| color*cut, data = "diamonds", strip = FALSE, pch  = 20, xlab = "myxlab", ylab = "myylab", main = "mymain")
xyplot(price~carat| color*cut, data = diamonds, strip = FALSE, pch  = 20, xlab = "myxlab", ylab = "myylab", main = "mymain")
xyplot(price~carat| color*cut, data = diamonds, strip = FALSE, pch  = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat| color*cut, data = diamonds, pch  = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp("red", "blue")
pal <- colorRamp(c("red", "blue")
)
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x,y, pch = 19,col= rgb(0, .5, .5))
plot(x,y, pch = 19,col= rgb(0, .5, .5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
colorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufactirer)
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data= mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = ".~drv")
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data=mpg, geom = c("points", "smooth"), facets = .~drv, method = "loess")
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv, method = "loess")
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv, method = "loess")
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv, method = loess)
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv, method = "loess")
kljlk
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g + geom_points(color = "pink", size = 4, alpha = 1/2)
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size=4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(data= testdat, aes(x= myx, y = myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g <- ggplot(dataset=mpg, aes(x= displ, y = hwy, color = factor(year)))
g <- ggplot(dataset=mpg, aes(x= displ, y = hwy, color = factor(year)))
g <- ggplot(dataset=mpg, aes(x= displ, y = hwy))
g <- ggplot(data =mpg, aes(x= displ, y = hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUe)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method = "lm", es = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")+ labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), methods = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"))
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(data = diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(data = diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) +geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(data = diamonds, aes(carat, price)) + geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
str(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(votes, rating, data = movies)
library(ggplot2)
library(movies)
data(movies)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(swirl)
setwd("~/Desktop/Data science/Reproducible Research/Project 1")
read.csv("./activity.csv")
activity <- read.csv("./activity.csv")
str(activity)
activity$date[15]
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
library(dplyr)
group_by?
?group_by
?group_by
names(activity)
day_steps <- group_by(activity$steps, date)
day_steps <- group_by(activity, date)
head(day_steps)
day_steps <- tapply(activity$steps, activity$date, sum)
day_steps
hist(day_steps)
library(ggplot2)
qplot(steps, data = day_steps)
qplot(day_steps$steps, data = day_steps)
with(day_steps, qplot(date, steps))
?barplot
with(day_steps, barplot(height = day_steps$steps,names.arg=day_steps$date,cex.names=0.68,las=3,col="blue"))
barplot(height = day_steps$steps,names.arg=day_steps$date,cex.names=0.68,las=3,col="blue")
hist(day_steps)
day_group <- group_by(activity, date)
head(day_group)
?summarise
?summarise
day_steps <- summarise(group_by(activity, date), sum(steps))
day_steps
with(day_steps, qplot(steps))
names(day_steps) [2] <- "steps"
day_steps
rm(day_group)
with(day_steps, qplot(steps))
with(day_steps, qplot(date))
with(day_steps, qplot(date, steps))
hist(day_steps$steps)
?qplot
with(day_steps, qplot(steps))
day_steps
hist(day_steps$steps)
qplot(day_steps$steps, col="green",breaks=20,main="Total steps per day",xlab="Steps per day")
qplot(day_steps$steps, col="green",breaks=10,main="Total steps per day",xlab="Steps per day")
qplot(day_steps$steps, col="green",main="Total steps per day",xlab="Steps per day")
qplot(day_steps$steps, main="Total steps per day",xlab="Steps per day")
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", break = 15, col = "green")
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks = 15, col = "green")
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks = 30, col = "green")
mean_steps <- mean(day_steps$steps)
mean_steps <- mean(day_steps$steps, na.rm = TRUE)
mean_steps
print(c("mean =", mean_steps))
median_steps <- median(day_steps$steps, na.rm = TRUE)
median_steps
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks = 30, col = "green")
abline(v = mean_steps, col = blue, lwd = 3)
abline(v = mean_steps, col = "blue", lwd = 3)
abline(v = median_steps, col = "purple", lwd = 3)
legend(legend = c("mean", "median"), lwd = 3, col = c("blue", "purple"), "topright")
head(activity)
interval_steps <- summarise(group_by(activity, interval), mean = mean(steps))
interval_steps
interval_steps <- summarise(group_by(activity, interval), mean = mean(steps), na.rm = TRUE)
interval_steps
interval_steps <- summarise(group_by(activity, interval, na.rm = TRUE), mean = mean(steps), na.rm = TRUE)
interval_steps <- summarise(group_by(activity, interval), mean = mean(steps, na.rm = TRUE))
interval_steps
with(interval_steps, qplot(interval, mean))
with(interval_steps, qplot(interval, mean, type = "line"))
with(interval_steps, qplot(interval, mean)) + geom("points", "line")
with(interval_steps, qplot(interval, mean)) + geom_line()
with(interval_steps, ggplot(interval, mean)) + geom_line()
ggplot(data = interval_steps, aes(interval, mean)) + geom_line()
ggplot(data = interval_steps, aes(interval, mean), main = "Average number of steps across intervals") + geom_line()
ggplot(data = interval_steps, aes(interval, mean), title = "Average number of steps across intervals") + geom_line()
max_steps <- interval_steps$interval [mean = max(interval_steps$mean)
]
max_steps
max(interval_steps$mean)
max_steps <- interval_steps$interval [interval_steps$mean = max(interval_steps$mean)
max_steps <- interval_steps$interval [interval_steps$mean == max(interval_steps$mean)
]
max_steps <- interval_steps$interval [interval_steps$mean == max(interval_steps$mean)]
max_steps
sum(is.na(interval_steps))
sum(is.na(activity))
count(activity$steps)
activity
head(activity)
count(activity$steps)
nrows(activity)
nrow(activity)
View(interval_steps)
View(activity)
for i in 1 to nrow(activity) {
if (is.na(activity[1,i]==TRUE),
activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]])
}
for i in 1 to nrow(activity) {if (is.na(activity[1,i]==TRUE),activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]])}
for (i in 1 to nrow(activity)) {if (is.na(activity[1,i]==TRUE),activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]])}
for (i in 1:nrow(activity)) {if (is.na(activity[1,i]==TRUE),activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]])}
which(is.na(activity))
for (i in 1 to nrow(activity)) {
if (is.na(activity[1,i]==TRUE),
activity[1,i] <- interval_steps$mean [interval_steps$interval ==
activity[3, i]])
}
for (i in 1 to nrow(activity)) {if (is.na(activity[1,i]==TRUE),activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]])}
for (i in 1:nrow(activity)) {if (is.na(activity[1,i]==TRUE),activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]])}
for (i in 1:nrow(activity)) {if (is.na(activity[1,i]==TRUE) {activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]])}}
for (i in 1:nrow(activity)) {if (is.na(activity[1,i]==TRUE) {activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]]}}
for (i in 1:nrow(activity)) {if (is.na(activity[1,i]==TRUE) {activity[1,i] <- interval_steps$mean [interval_steps$interval == activity[3, i]]}}
mean(is.na(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[1,i]==TRUE)) {
steps_new[1,i] <- interval_steps$mean [interval_steps$interval ==
activity[3, i]]
} else {
steps[1,i] <- activity [1,i]
}
}
steps_new <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[1,i]==TRUE)) {
steps_new[i] <- interval_steps$mean [interval_steps$interval ==
activity[3, i]]
} else {
steps_new[i] <- activity [1,i]
}
}
k <- interval_steps$mean [interval_steps$interval == activity[3, 17345]]
head(interval_steps)
for (i in 1:nrow(activity)) {
if (is.na(activity[1,i])==TRUE) {
steps_new[i] <- interval_steps$mean [interval_steps$interval ==
activity[3, i]]
} else {
steps_new[i] <- activity [1,i]
}
}
is.na(activity[1,25])
is.na(activity[17345, 1])
for (i in 1:nrow(activity)) {
if (is.na(activity[i,1])==TRUE) {
steps_new[i] <- interval_steps$mean [interval_steps$interval ==
activity[i, 3]]
} else {
steps_new[i] <- activity [i,3]
}
}
activity_na_rm <- cbind(steps_new, activity[,2:3])
sum(is.na(activity_na_rm))
day_steps_na_rm <- summarise(group_by(activity_na_rm, date), sum(steps_new))
mean_steps_na_rm <- mean(activity_na_rm$steps_new)
median_steps_na_rm <- median(activity_na_rm$steps_new)
head(day_steps_na_rm)
names(day_steps_na_rm) [2] <- "steps"
head(day_steps_na_rm)
mean_steps_na_rm <- mean(day_steps_na_rm$steps)
median_steps_na_rm <- median(day_steps_na_rm$steps)
head(activity_na_rm, 30)
summary(activity_na_rm$steps_new)
summary(steps_new)
summary(interval_steps$mean)
k <- interval_steps$mean [interval_steps$interval == activity[17345, 3]]
k <- interval_steps$mean [interval_steps$interval == activity[3, 3]]
for (i in 1:nrow(activity)) {
if (is.na(activity[i,1])==TRUE) {
steps_new[i] <- interval_steps$mean [interval_steps$interval ==
activity[i, 3]]
} else {
steps_new[i] <- activity [i,3]
}
}
summary(steps_new)
if (is.na(activity[1,1])==TRUE) {
k <- interval_steps$mean [interval_steps$interval ==
activity[1, 3]]
} else {
k <- activity [1,3]
}
if (is.na(activity[1,1])==TRUE) {
k <- interval_steps$mean [interval_steps$interval ==
activity[1, 3]]
} else {
k <- activity [1,3]
}
if (is.na(activity[1,1])==TRUE) {
k <- interval_steps$mean [interval_steps$interval == activity[1, 3]]
print(k)} else {
k <- activity [1,3]
print (k)}
head(interval_steps, 20)
rm(steps_new)
steps_new <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,1])==TRUE) {
steps_new[i] <- interval_steps$mean [interval_steps$interval ==
activity[i, 3]]
} else {
steps_new[i] <- activity [i,3]
}
}
summary(steps_new)
which(steps_new>200)
interval_steps$mean [interval_steps$interval ==
activity[10720, 3]]
steps_new[10720]
activity$steps[10720]
activity$steps[10721]
activity$steps[1]
activity$steps[10345]
rm(steps_new)
steps_new <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (is.na(activity[i,1])==TRUE) {
steps_new[i] <- interval_steps$mean [interval_steps$interval ==
activity[i, 3]]
} else {
steps_new[i] <- activity [i,1]
}
}
summary(steps_new)
which(steps_new>207)
steps_new[15452]
activity$steps[15452]
activity_na_rm <- cbind(steps_new, activity[,2:3])
sum(is.na(activity_na_rm))
head(activity_na_rm)
day_steps_na_rm <- summarise(group_by(activity_na_rm, date), sum(steps_new))
names(day_steps_na_rm) [2] <- "steps"
head(day_steps_na_rm)
summary(day_steps_na_rm$steps)
summary(day_steps$steps)
summary(day_steps$steps, na.rm = TRUE)
mean_steps
print(mean_steps, median_steps)
print(c(mean_steps, median_steps))
interval_na <- activity$interval[is.na(activity$steps)==TRUE]
interval_list_na <- unique(interval_na)
table(interval_na)
test <- merge(interval_na, interval_steps, by = "interval")
interval_na <- activity[is.na(activity$steps)==TRUE]
test <- interval_steps[interval_steps$interval %in% interval_na]
head(test,2)
test <- interval_steps[interval_steps$interval %in% interval_list_na]
rm(test)
test <- interval_steps[interval_steps$interval %in% interval_list_na]
rm(test)
?weekdays
weekdays(activity_na_rm$date[1])
weekdays(activity_na_rm$date[1], abbreviate = TRUE)
library(lubridate)
?wday
wday(activity_na_rm$date[1])
day_type <- numeric(nrow(activity))
for (i in 1:nrow(activity)) {
if (wday(activity_na_rm$date[i]) ==1 | wday(activity_na_rm$date[i]) ==7) {
day_type[i] <- "weekend"
} else {
day_type[i] <- "weekday"
}
}
day_type <- as.factor(day_type)
activity_week <- cbind(activity_na_rm[,1:2], day_type, activity_na_rm[,3])
head(activity_week)
names(activity_week) [1] <- "steps"
names(activity_week) [4] <- "interval"
head(activity_week)
ggplot(data=activity_week, aes(interval, steps)) + geom_line()+facet_grid(day_type~.)
qplot(interval, steps,data=activity_week, geom = "line", facets = day_type ~.)
avg_per_day <- summarise(group_by(activity_week, data), mean = mean(steps))
avg_per_day <- summarise(group_by(activity_week, date), mean = mean(steps))
head(avg_per_day)
avg_per_day <- summarise(group_by(activity_week, date), day_type = day_type, interval = interval, mean = mean(steps))
avg_per_day <- summarise(group_by(activity_week, interval, day_type), mean = mean(steps))
head(avg_per_day)
ggplot(data=avg_per_day, aes(interval, steps)) + geom_line()+facet_grid(day_type~.)
ggplot(data=avg_per_day, aes(interval, mean)) + geom_line()+facet_grid(day_type~.) + labs(y ="average number of steps", title = "Average number of steps per interval")
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks =
30, col = "green")
class(day_steps$steps)
qplot(day_steps$steps)
qplot(day_steps$steps, na.rm = TRUE)
qplot(day_steps$steps, bins = 30, na.rm = TRUE)
qplot(day_steps$steps, bins = 30, color = "green", na.rm = TRUE)
qplot(day_steps$steps, bins = 30, na.rm = TRUE) + geom_bar(fill = "white", color = "green")
qplot(day_steps$steps, bins = 30, na.rm = TRUE) + geom_bar(fill = "white")
qplot(day_steps$steps, bins = 30, na.rm = TRUE)
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks =
20, col = "green", na.rm = TRUE)
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks =
20, col = "green")
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks =
20, col = "green")
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks =
20, col = "purple")
day_steps$steps <- as.numeric(day_steps$steps)
hist(day_steps$steps, main="Total steps per day",xlab="Steps per day", breaks =
20, col = "green")
is.na(day_steps$steps)
?hist
is.na(day_steps$steps[is.na(day_steps$steps) == FALSE])
hist(day_steps$steps [is.na(day_steps$steps) == FALSE], main="Total steps per day",xlab="Steps per day", breaks =
20, col = "green")
hist_steps <- as.numeric(day_steps[is.na(day_steps$steps) == FALSE])
hist_steps <- day_steps[is.na(day_steps$steps) == FALSE]
hist_steps <- day_steps[!is.na()]
hist_steps <- day_steps[!is.na(day_steps$steps)]
head(hist_steps)
hist_steps <- na.omit(day_steps)
hist(hist_steps$steps, main="Total steps per day"
,xlab="Steps per day", breaks =20, col = "green")
View(hist_steps)
qplot(hist_steps$steps, title="Total steps per day")
qplot(steps, data = day_steps)
qplot(steps, data = day_steps, bins = 20)
qplot(steps, data = na.omit(day_steps), bins = 20)
head(day_steps)
